version: '3.1'

volumes:
  db:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/gulag/db'
  ftp:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/gulag/ftp'
  es:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/gulag/es'

services:
  elasticsearch:
    image: nshou/elasticsearch-kibana:latest
    container_name: elasticsearch
    restart: always
    ports:
      - 8082:9200
      - 8083:5601
    volumes:
      - es:/home/elasticsearch/elasticsearch/data
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:management-alpine
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
      - 5672:5672
      - 8084:15672
  mongo:
    container_name: mongo
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_DATABASE: gulag
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    ports:
      - 27017:27017
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/init.js:ro
      - db:/data/db
  mongo-admin:
    container_name: mongo-admin
    image: mongo-express
    restart: always
    depends_on:
      - mongo
    ports:
      - 8085:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
  # If there is a built image on the hub, use it
  # project-gulag:
  #   image: noru/project-gulag:latest
  #   depends_on:
  #     - mongo
  #     - rabbitmq
  gulag:
    container_name: gulag
    restart: always
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - 8081:80
      - 5683:5683/udp
    depends_on:
      - mongo
      - rabbitmq
      - elasticsearch
    volumes:
      - ftp:/app/ftp
